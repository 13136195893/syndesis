#
# Copyright (C) 2016 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
version: 2
jobs:
  build:
    working_directory: /workspace
    docker:
    - image: wombat7/openjdk-node-docker
    environment:
      MAVEN_OPTS: -Xmx1024m
      DOCKER_VERSION: 17.04.0-ce

    steps:
      - setup_remote_docker

      - checkout

      - run:
          name: Install yarn
          command: |
            rm -rf ~/.yarn
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.2.1
            echo 'export PATH="${HOME}/.yarn/bin:${PATH}"' >> $BASH_ENV

      - run:
          name: Prep for Cache Load
          command: |
            git submodule init
            git submodule update
            find . | grep pom.xml | grep -v src/test/resources | grep -v src/main/resources | xargs cat > all-poms

      - restore_cache:
          key: syndesis-mvn-{{ checksum "all-poms" }}          
      - restore_cache:
          key: syndesis-yarn-{{ checksum "ui/yarn.lock" }}

      - run:
          name: Build
          command: |
            echo Using node version: $(node --version)
            ./build.sh

      - save_cache:
          key: syndesis-mvn-{{ checksum "all-poms" }}
          paths:
          - ~/.m2
      - save_cache:
          key: syndesis-yarn-{{ checksum "ui/yarn.lock" }}
          paths:
          - /usr/local/share/.cache/yarn/v1

      - run:
          name: Collect junit reports
          command: |
            mkdir ./junit/
            find . -type f -regex ".*/target/.*-reports/.*xml" -exec cp {} ./junit/ \;

      - run:
          name: Collect API docs
          command: |
            mkdir ./apidocs
            if [[ -d runtime/runtime/target/classes/static ]]; then 
              cp runtime/runtime/target/classes/static/index.html ./apidocs
              cp runtime/runtime/target/classes/static/swagger.json ./apidocs
              cp runtime/runtime/target/classes/static/swagger.yaml ./apidocs
            fi

      - store_artifacts:
          path: ./apidocs
      - store_artifacts:
          path: ./junit
      - store_test_results:
          path: ./junit

