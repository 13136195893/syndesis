#
# Copyright (C) 2016 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: 2
jobs:
  build:
    working_directory: /workspace
    docker:
    - image: openjdk:8-jdk
    environment:
      MAVEN_OPTS: -Xmx1024m
      DOCKER_VERSION: 17.04.0-ce

    steps:
      - setup_remote_docker

      - checkout

      - restore_cache:
          key: syndesis-rest-m2-{{ checksum "pom.xml" }}-{{ checksum "connector-catalog/pom.xml" }}-{{ checksum "controllers/pom.xml" }}-{{ checksum "core/pom.xml" }}-{{ checksum "credential/pom.xml" }}-{{ checksum "dao/pom.xml" }}-{{ checksum "github/pom.xml" }}-{{ checksum "jsondb/pom.xml" }}-{{ checksum "model/pom.xml" }}-{{ checksum "model2/pom.xml" }}-{{ checksum "openshift/pom.xml" }}-{{ checksum "project-generator/pom.xml" }}-{{ checksum "rest/pom.xml" }}-{{ checksum "syndesis-maven-plugin/pom.xml" }}-{{ checksum "runtime/pom.xml" }}-{{ checksum "verifier/pom.xml" }}-{{ checksum "inspector/pom.xml" }}-{{ checksum "setup/pom.xml" }}
          key: syndesis-rest-m2-{{ checksum "pom.xml" }}

      - run:
          name: Maven
          command: ./mvnw --batch-mode -U -Pfabric8 install

      - save_cache:
          key: syndesis-rest-m2-{{ checksum "pom.xml" }}-{{ checksum "connector-catalog/pom.xml" }}-{{ checksum "controllers/pom.xml" }}-{{ checksum "core/pom.xml" }}-{{ checksum "credential/pom.xml" }}-{{ checksum "dao/pom.xml" }}-{{ checksum "github/pom.xml" }}-{{ checksum "jsondb/pom.xml" }}-{{ checksum "model/pom.xml" }}-{{ checksum "model2/pom.xml" }}-{{ checksum "openshift/pom.xml" }}-{{ checksum "project-generator/pom.xml" }}-{{ checksum "rest/pom.xml" }}-{{ checksum "syndesis-maven-plugin/pom.xml" }}-{{ checksum "runtime/pom.xml" }}-{{ checksum "verifier/pom.xml" }}-{{ checksum "inspector/pom.xml" }}-{{ checksum "setup/pom.xml" }}

          paths:
          - ~/.m2

      - run:
          name: Collect junit reports
          command: |
            mkdir ./junit/
            find . -type f -regex ".*/target/.*-reports/.*xml" -exec cp {} ./junit/ \;

      - run:
          name: Collect API docs
          command: |
            mkdir ./apidocs
            cp runtime/target/classes/static/index.html ./apidocs
            cp runtime/target/classes/static/swagger.json ./apidocs
            cp runtime/target/classes/static/swagger.yaml ./apidocs

      - store_artifacts:
          path: ./apidocs
      - store_artifacts:
          path: ./junit

      - store_test_results:
          path: ./junit

      - deploy:
          command: |
            if [ "${CIRCLE_PROJECT_USERNAME}" != "syndesisio" ]; then
              exit 0
            fi

            curl -fsSL https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz | tar xz -C /usr/bin --strip-components 1

            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
              docker push syndesis/syndesis-rest:latest | cat -
            fi
            if [[ "${CIRCLE_TAG}" =~ ^[0-9]+(\.[0-9]+){2} ]]; then
              docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
              docker push syndesis/syndesis-rest:${CIRCLE_TAG} | cat -
              docker tag syndesis/syndesis-rest:${CIRCLE_TAG} syndesis/syndesis-rest:$(echo ${CIRCLE_TAG} | sed -e 's/\.[0-9][0-9]*$//')
              docker push syndesis/syndesis-rest:$(echo ${CIRCLE_TAG} | sed -e 's/\.[0-9][0-9]*$//')
            fi
