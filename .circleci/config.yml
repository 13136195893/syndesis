version: 2
jobs:
  build:
    working_directory: /workspace
    docker:
    - image: node:8.7
    environment:
      CHROME_BIN: /usr/bin/chromium
      DOCKER_VERSION: 17.04.0-ce

    steps:

    - run:
        name: update yarn
        command: |
          # remove default yarn
          rm -rf $(dirname $(which yarn))/yarn*
          # download latest
          rm -rf ~/.yarn
          curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.2.1
          echo 'export PATH="${PATH}:${HOME}/.yarn/bin"' >> $BASH_ENV

    - setup_remote_docker

    - checkout

    - run:
        name: Install Dependencies
        command: |
          rm -Rf ./node_modules
          yarn cache clean
          yarn install --no-progress

    - run:
        name: Lint
        command: yarn ng lint

    - run:
        name: Run AOT compile
        command: |
          yarn build:ci

    - run:
        name: Install Test Dependencies
        command: |
          apt-get update
          apt-get upgrade -y
          apt-get install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget

    - run:
        name: Run unit tests
        command: |
          rm -Rf ./coverage ./junit
          mkdir ./coverage ./junit
          yarn test:ci

    - store_test_results:
        path: ./junit

    - store_artifacts:
        path: ./dist
    - store_artifacts:
        path: ./coverage
    - store_artifacts:
        path: ./junit

    - deploy:
        command: |
          if [ "${CIRCLE_PROJECT_USERNAME}" != "syndesisio" ]; then
            exit 0
          fi

          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            DOCKER_IMAGE_TAG="latest"
          elif [[ "${CIRCLE_BRANCH}" =~ ^summit-demo ]]; then
            DOCKER_IMAGE_TAG="${CIRCLE_BRANCH}"
          elif [[ "${CIRCLE_TAG}" =~ ^v[0-9]+(\.[0-9]+){2} ]]; then
            DOCKER_IMAGE_TAG="${CIRCLE_TAG}"
          fi

          if [ -z "${DOCKER_IMAGE_TAG}" ]; then
            exit 0
          fi

          curl -fsSL https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz | tar xz -C /usr/bin --strip-components 1

          yarn build:ci
          docker build -t syndesis/syndesis-ui:${DOCKER_IMAGE_TAG} -f docker/Dockerfile . | cat -
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD -e $DOCKER_EMAIL
          docker push syndesis/syndesis-ui:${DOCKER_IMAGE_TAG} | cat -

          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            curl -fsSL https://github.com/openshift/origin/releases/download/v1.5.0/openshift-origin-client-tools-v1.5.0-031cbe4-linux-64bit.tar.gz | tar xz -C /usr/bin --strip-components 1
            oc login --server=${OPENSHIFT_APISERVER} --token=${OPENSHIFT_TOKEN}
            oc project syndesis-staging
            oc import-image syndesis/syndesis-ui:${DOCKER_IMAGE_TAG}
            git config --global user.email "${GIT_EMAIL}"
            git config --global user.name "${GIT_NAME}"
            ./publish-to-gh-pages.sh
          fi
