- apiVersion: v1
  kind: Service
  metadata:
    name: syndesis-ui
    labels:
      app: syndesis
      component: syndesis-ui
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: syndesis-ui-tls
      service.alpha.openshift.io/dependencies: |
          {"name":"syndesis-rest","kind":"Service"},
          {"name":"syndesis-verifier","kind":"Service"},
          {"name":"syndesis-atlasmap","kind":"Service"},
          {"name":"syndesis-github-proxy","kind":"Service"},
          {"name":"syndesis-openshift-proxy","kind":"Service"},
          {"name":"syndesis-db","kind":"Service"} ]
  spec:
    ports:
    - port: 8443
      protocol: TCP
      targetPort: 8443
    selector:
      app: syndesis
      component: syndesis-ui
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: syndesis
      component: syndesis-ui
    name: syndesis-ui
  spec:
    host: ${ROUTE_HOSTNAME}
    port:
      targetPort: 8443
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: reencrypt
    to:
      kind: Service
      name: syndesis-ui
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: syndesis
      component: syndesis-ui
    name: syndesis-ui
  spec:
    replicas: 1
    selector:
      app: syndesis
      component: syndesis-ui
      deploymentconfig: syndesis-ui
    strategy:
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      resources:
        limits:
          memory: "256Mi"
        requests:
          memory: "20Mi"
      type: Rolling
    template:
      metadata:
        labels:
          app: syndesis
          component: syndesis-ui
          deploymentconfig: syndesis-ui
      spec:
        containers:
        - name: syndesis-ui
{{^WithDockerImages}}
          image: ' '
{{/WithDockerImages}}{{#WithDockerImages}}
          image: ${SYNDESIS_REGISTRY}/{{ Images.SyndesisImagesPrefix }}/{{ Images.Syndesis.Ui }}:{{ Tags.Syndesis }}
{{/WithDockerImages}}
          imagePullPolicy: IfNotPresent
{{^Probeless}}
          livenessProbe:
            exec:
              command:
              - curl
              - -sSLf
              - http://localhost:8080
            initialDelaySeconds: 30
          readinessProbe:
            exec:
              command:
              - curl
              - -sSLf
              - http://localhost:8080
            initialDelaySeconds: 1{{/Probeless}}
          ports:
          - containerPort: 8080
          volumeMounts:
          - mountPath: /usr/share/nginx/html/config
            name: config-volume
          # Set to burstable with a low memory footprint to start (50 Mi)
          resources:
            limits:
              memory: 255Mi
            requests:
              memory: 50Mi
        - name: syndesis-oauthproxy
{{^WithDockerImages}}
          image: ' '{{/WithDockerImages}}{{#WithDockerImages}}
          image: ${SYNDESIS_REGISTRY}/{{Images.OAuthProxyImagePrefix}}/{{ Images.Support.OAuthProxy }}:{{ Tags.OAuthProxy }}{{/WithDockerImages}}
          args:
            - --https-address=:8443
            - --provider=openshift
            - --client-id={{#Restricted}}system:serviceaccount:${OPENSHIFT_PROJECT}:syndesis-oauth-client{{/Restricted}}{{^Restricted}}${OPENSHIFT_OAUTH_CLIENT_ID}{{/Restricted}}
            - --client-secret=${OPENSHIFT_OAUTH_CLIENT_SECRET}
            - --upstream=http://127.0.0.1:8080
            - --tls-cert=/etc/tls/private/tls.crt
            - --tls-key=/etc/tls/private/tls.key
            - --cookie-secret=${OAUTH_COOKIE_SECRET}
            - --pass-access-token
            - --skip-provider-button
            - --skip-auth-regex=/api/v1/swagger.*
            - --skip-auth-regex=/api/v1/index.html
            - --skip-auth-regex=/api/v1/credentials/callback
            - --skip-auth-preflight
            {{#Restricted}}- --openshift-sar={"namespace":"${OPENSHIFT_PROJECT}","resource":"pods","verb":"get"}{{/Restricted}}
          ports:
          - containerPort: 8443
            name: public
            protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 8443
          livenessProbe:
            tcpSocket:
              port: 8443
          volumeMounts:
          - mountPath: /etc/tls/private
            name: syndesis-ui-tls
        volumes:
        - configMap:
            name: syndesis-ui-config
          name: config-volume
        - secret:
            secretName: syndesis-ui-tls
          name: syndesis-ui-tls
    triggers:
{{^WithDockerImages}}
    - imageChangeParams:
        automatic: true
        containerNames:
        - syndesis-ui
        from:
          kind: ImageStreamTag
          name: {{ Images.Syndesis.Ui }}:{{ Tags.Syndesis }}
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: ImageChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - syndesis-oauthproxy
        from:
          kind: ImageStreamTag
          name: {{ Images.Support.OAuthProxy }}:{{ Tags.OAuthProxy }}
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: ImageChange
{{/WithDockerImages}}
    - type: ConfigChange
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: syndesis-ui-config
    labels:
      app: syndesis
      component: syndesis-ui
  data:
    config.json: |
      {
        "apiEndpoint": "https://${ROUTE_HOSTNAME}/api/v1",
        "title": "Syndesis",
        "datamapper": {
          "baseJavaInspectionServiceUrl": "https://${ROUTE_HOSTNAME}/v2/atlas/java/",
          "baseXMLInspectionServiceUrl": "https://${ROUTE_HOSTNAME}/v2/atlas/xml/",
          "baseJSONInspectionServiceUrl": "https://${ROUTE_HOSTNAME}/v2/atlas/json/",
          "baseMappingServiceUrl": "https://${ROUTE_HOSTNAME}/v2/atlas/"
        },
{{#Productized}}
        "branding": {
          "logoWhiteBg": "",
          "logoDarkBg": "",
          "iconWhiteBg": "assets/images/FuseIgniteLogo_Black.svg",
          "iconDarkBg": "assets/images/FuseIgniteLogo_White.svg",
          "appName": "Fuse Ignite",
          "favicon32": "/favicon-32x32.png",
          "favicon16": "/favicon-16x16.png",
          "touchIcon": "/apple-touch-icon.png"
       }{{/Productized}}{{^Productized}}
        "branding": {
          "logoWhiteBg": "assets/images/syndesis-logo-svg-white.svg",
          "logoDarkBg": "assets/images/syndesis-logo-svg-white.svg",
          "iconWhiteBg": "assets/images/glasses_logo_square.png",
          "iconDarkBg": "assets/images/glasses_logo_square.png",
          "appName": "Syndesis",
          "favicon32": "/favicon-32x32.png",
          "favicon16": "/favicon-16x16.png",
          "touchIcon": "/apple-touch-icon.png"
       }{{/Productized}}
      }
