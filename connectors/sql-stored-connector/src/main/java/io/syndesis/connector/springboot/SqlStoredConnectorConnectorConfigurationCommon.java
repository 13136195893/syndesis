/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.syndesis.connector.springboot;

import javax.annotation.Generated;
import javax.sql.DataSource;

/**
 * The sql connector allows you to work with databases using JDBC Stored
 * Procedure queries.
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.connector.SpringBootAutoConfigurationMojo")
public class SqlStoredConnectorConnectorConfigurationCommon {

    /**
     * Sets the DataSource to use to communicate with the database.
     */
    private DataSource dataSource;
    /**
     * Sets the StoredProcedure name to perform
     */
    private String procedureName;
    /**
     * Sets the StoredProcedure template to perform
     */
    private String template;
    /**
     * Enables or disables batch mode
     */
    private boolean batch = false;
    /**
     * If set will ignore the results of the template and use the existing IN
     * message as the OUT message for the continuation of processing
     */
    private boolean noop = false;
    /**
     * Sets the user to use for the database connection
     */
    private String user;
    /**
     * Sets the password to use for the database connection
     */
    private String password;
    /**
     * Sets the driver class to use for the database connection
     */
    private String driver;
    /**
     * Sets the connection url to use for the database connection
     */
    private String url;

    public DataSource getDataSource() {
        return dataSource;
    }

    public void setDataSource(DataSource dataSource) {
        this.dataSource = dataSource;
    }

    public String getProcedureName() {
        return procedureName;
    }

    public void setProcedureName(String procedureName) {
        this.procedureName = procedureName;
    }
    
    public String getTemplate() {
        return template;
    }

    public void setTemplate(String template) {
        this.template = template;
    }

    public boolean isBatch() {
        return batch;
    }

    public void setBatch(boolean batch) {
        this.batch = batch;
    }

    public boolean isNoop() {
        return noop;
    }

    public void setNoop(boolean noop) {
        this.noop = noop;
    }

    public String getUser() {
        return user;
    }

    public void setUser(String user) {
        this.user = user;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getDriver() {
        return driver;
    }

    public void setDriver(String driver) {
        this.driver = driver;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }
}