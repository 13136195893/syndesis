package io.syndesis.connector.jms.springboot;

import javax.annotation.Generated;

/**
 * respond JMS Message
 * 
 * Generated by camel-package-maven-plugin - do not edit this file!
 */
@Generated("org.apache.camel.maven.connector.SpringBootAutoConfigurationMojo")
public class ActiveMQRespondBytesConnectorConfigurationCommon {

    /**
     * The maximum number of connections available to endpoints started under
     * this component
     */
    private Integer connectionCount = 1;
    /**
     * The kind of destination to use
     */
    private String destinationType = "queue";
    /**
     * DestinationName is a JMS queue or topic name. By default the
     * destinationName is interpreted as a queue name.
     */
    private String destinationName;
    /**
     * Broker URL
     */
    private String brokerUrl;
    /**
     * Authorization credential user name
     */
    private String username;
    /**
     * Authorization credential password
     */
    private String password;

    public Integer getConnectionCount() {
        return connectionCount;
    }

    public void setConnectionCount(Integer connectionCount) {
        this.connectionCount = connectionCount;
    }

    public String getDestinationType() {
        return destinationType;
    }

    public void setDestinationType(String destinationType) {
        this.destinationType = destinationType;
    }

    public String getDestinationName() {
        return destinationName;
    }

    public void setDestinationName(String destinationName) {
        this.destinationName = destinationName;
    }

    public String getBrokerUrl() {
        return brokerUrl;
    }

    public void setBrokerUrl(String brokerUrl) {
        this.brokerUrl = brokerUrl;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }
}