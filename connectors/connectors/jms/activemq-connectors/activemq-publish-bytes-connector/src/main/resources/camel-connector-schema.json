{
  "component":{
    "kind":"component",
    "baseScheme":"sjms2",
    "scheme":"activemq-publish-bytes",
    "syntax":"activemq-publish-bytes:destinationType:destinationName",
    "title":"ActiveMQPublishBytes",
    "description":"Publish JMS Message",
    "label":"jms",
    "deprecated":false,
    "async":true,
    "producerOnly":true,
    "lenientProperties":false,
    "javaType":"io.syndesis.connector.jms.ActiveMQPublishBytesComponent",
    "groupId":"io.syndesis",
    "artifactId":"activemq-publish-bytes-connector",
    "version":"0.5-SNAPSHOT"
  },
  "componentProperties":{
    "connectionCount":{
      "kind":"property",
      "displayName":"Connection Count",
      "group":"common",
      "required":false,
      "type":"integer",
      "javaType":"java.lang.Integer",
      "deprecated":false,
      "secret":false,
      "defaultValue":1,
      "description":"The maximum number of connections available to endpoints started under this component"
    }
  },
  "properties":{
    "destinationType":{
      "kind":"path",
      "displayName":"Destination Type",
      "group":"common",
      "required":false,
      "type":"string",
      "javaType":"java.lang.String",
      "enum":[
        "topic",
        "queue"
      ],
      "deprecated":false,
      "secret":false,
      "defaultValue":"queue",
      "description":"The kind of destination to use"
    },
    "destinationName":{
      "kind":"path",
      "displayName":"Destination Name",
      "group":"common",
      "required":true,
      "type":"string",
      "javaType":"java.lang.String",
      "deprecated":false,
      "secret":false,
      "description":"DestinationName is a JMS queue or topic name. By default the destinationName is interpreted as a queue name."
    },
    "consumerCount":{
      "kind":"parameter",
      "displayName":"Consumer Count",
      "group":"consumer",
      "label":"consumer",
      "required":false,
      "type":"integer",
      "javaType":"int",
      "deprecated":false,
      "secret":false,
      "defaultValue":1,
      "description":"Sets the number of consumer listeners used for this endpoint."
    },
    "durableSubscriptionId":{
      "kind":"parameter",
      "displayName":"Durable Subscription Id",
      "group":"consumer",
      "label":"consumer",
      "required":false,
      "type":"string",
      "javaType":"java.lang.String",
      "deprecated":false,
      "secret":false,
      "description":"Sets the durable subscription Id required for durable topics."
    },
    "synchronous":{
      "kind":"parameter",
      "displayName":"Synchronous",
      "group":"consumer",
      "label":"consumer",
      "required":false,
      "type":"boolean",
      "javaType":"boolean",
      "deprecated":false,
      "secret":false,
      "defaultValue":true,
      "description":"Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported)."
    },
    "messageSelector":{
      "kind":"parameter",
      "displayName":"Message Selector",
      "group":"consumer (advanced)",
      "label":"consumer,advanced",
      "required":false,
      "type":"string",
      "javaType":"java.lang.String",
      "deprecated":false,
      "secret":false,
      "description":"Sets the JMS Message selector syntax."
    },
    "namedReplyTo":{
      "kind":"parameter",
      "displayName":"Named Reply To",
      "group":"producer",
      "label":"producer",
      "required":false,
      "type":"string",
      "javaType":"java.lang.String",
      "deprecated":false,
      "secret":false,
      "description":"Sets the reply to destination name used for InOut producer endpoints."
    },
    "persistent":{
      "kind":"parameter",
      "displayName":"Persistent",
      "group":"producer",
      "label":"producer",
      "required":false,
      "type":"boolean",
      "javaType":"boolean",
      "deprecated":false,
      "secret":false,
      "defaultValue":true,
      "description":"Flag used to enable\/disable message persistence."
    },
    "producerCount":{
      "kind":"parameter",
      "displayName":"Producer Count",
      "group":"producer",
      "label":"producer",
      "required":false,
      "type":"integer",
      "javaType":"int",
      "deprecated":false,
      "secret":false,
      "defaultValue":1,
      "description":"Sets the number of producers used for this endpoint."
    },
    "ttl":{
      "kind":"parameter",
      "displayName":"Ttl",
      "group":"producer",
      "label":"producer",
      "required":false,
      "type":"integer",
      "javaType":"long",
      "deprecated":false,
      "secret":false,
      "defaultValue":-1,
      "description":"Flag used to adjust the Time To Live value of produced messages."
    },
    "allowNullBody":{
      "kind":"parameter",
      "displayName":"Allow Null Body",
      "group":"producer (advanced)",
      "label":"producer,advanced",
      "required":false,
      "type":"boolean",
      "javaType":"boolean",
      "deprecated":false,
      "secret":false,
      "defaultValue":true,
      "description":"Whether to allow sending messages with no body. If this option is false and the message body is null then an JMSException is thrown."
    },
    "prefillPool":{
      "kind":"parameter",
      "displayName":"Prefill Pool",
      "group":"producer (advanced)",
      "label":"producer,advanced",
      "required":false,
      "type":"boolean",
      "javaType":"boolean",
      "deprecated":false,
      "secret":false,
      "defaultValue":true,
      "description":"Whether to prefill the producer connection pool on startup or create connections lazy when needed."
    },
    "responseTimeOut":{
      "kind":"parameter",
      "displayName":"Response Time Out",
      "group":"producer (advanced)",
      "label":"producer,advanced",
      "required":false,
      "type":"integer",
      "javaType":"long",
      "deprecated":false,
      "secret":false,
      "defaultValue":5000,
      "description":"Sets the amount of time we should wait before timing out a InOut response."
    },
    "asyncStartListener":{
      "kind":"parameter",
      "displayName":"Async Start Listener",
      "group":"advanced",
      "label":"advanced",
      "required":false,
      "type":"boolean",
      "javaType":"boolean",
      "deprecated":false,
      "secret":false,
      "defaultValue":false,
      "description":"Whether to startup the consumer message listener asynchronously when starting a route. For example if a JmsConsumer cannot get a connection to a remote JMS broker then it may block while retrying and\/or failover. This will cause Camel to block while starting routes. By setting this option to true you will let routes startup while the JmsConsumer connects to the JMS broker using a dedicated thread in asynchronous mode. If this option is used then beware that if the connection could not be established then an exception is logged at WARN level and the consumer will not be able to receive messages; You can then restart the route to retry."
    },
    "asyncStopListener":{
      "kind":"parameter",
      "displayName":"Async Stop Listener",
      "group":"advanced",
      "label":"advanced",
      "required":false,
      "type":"boolean",
      "javaType":"boolean",
      "deprecated":false,
      "secret":false,
      "defaultValue":false,
      "description":"Whether to stop the consumer message listener asynchronously when stopping a route."
    },
    "includeAllJMSXProperties":{
      "kind":"parameter",
      "displayName":"Include All JMSXProperties",
      "group":"advanced",
      "label":"advanced",
      "required":false,
      "type":"boolean",
      "javaType":"boolean",
      "deprecated":false,
      "secret":false,
      "defaultValue":false,
      "description":"Whether to include all JMSXxxx properties when mapping from JMS to Camel Message. Setting this to true will include properties such as JMSXAppID and JMSXUserID etc. Note: If you are using a custom headerFilterStrategy then this option does not apply."
    },
    "transacted":{
      "kind":"parameter",
      "displayName":"Transacted",
      "group":"transaction",
      "label":"consumer,transaction",
      "required":false,
      "type":"boolean",
      "javaType":"boolean",
      "deprecated":false,
      "secret":false,
      "defaultValue":false,
      "description":"Specifies whether to use transacted mode"
    },
    "transactionBatchCount":{
      "kind":"parameter",
      "displayName":"Transaction Batch Count",
      "group":"transaction",
      "label":"consumer,transaction",
      "required":false,
      "type":"integer",
      "javaType":"int",
      "deprecated":false,
      "secret":false,
      "defaultValue":-1,
      "description":"If transacted sets the number of messages to process before committing a transaction."
    },
    "transactionBatchTimeout":{
      "kind":"parameter",
      "displayName":"Transaction Batch Timeout",
      "group":"transaction",
      "label":"consumer,transaction",
      "required":false,
      "type":"integer",
      "javaType":"long",
      "deprecated":false,
      "secret":false,
      "defaultValue":5000,
      "description":"Sets timeout (in millis) for batch transactions the value should be 1000 or higher."
    },
    "sharedJMSSession":{
      "kind":"parameter",
      "displayName":"Shared JMSSession",
      "group":"transaction (advanced)",
      "label":"transaction,advanced",
      "required":false,
      "type":"boolean",
      "javaType":"boolean",
      "deprecated":false,
      "secret":false,
      "defaultValue":true,
      "description":"Specifies whether to share JMS session with other SJMS endpoints. Turn this off if your route is accessing to multiple JMS providers. If you need transaction against multiple JMS providers use jms component to leverage XA transaction."
    }
  },
  "connectorProperties":{
    "brokerUrl":{
      "kind":"property",
      "displayName":"Broker URL",
      "group":"common",
      "label":"common",
      "required":true,
      "type":"string",
      "javaType":"java.lang.String",
      "deprecated":false,
      "secret":false,
      "description":"Broker URL"
    },
    "username":{
      "kind":"property",
      "displayName":"User Name",
      "group":"security",
      "label":"common,security",
      "required":false,
      "type":"string",
      "javaType":"java.lang.String",
      "deprecated":false,
      "secret":false,
      "description":"Authorization credential user name"
    },
    "password":{
      "kind":"property",
      "displayName":"Password",
      "group":"security",
      "label":"common,security",
      "required":false,
      "type":"string",
      "javaType":"java.lang.String",
      "deprecated":false,
      "secret":true,
      "description":"Authorization credential password"
    }
  }
}