[
  {
    "kind": "connector",
    "data": {
      "id": "twitter",
      "name": "Twitter",
      "description": "Direct and event-driven interaction with Twitter timelines, searches, and messages",
      "icon": "fa-twitter",
      "configuredProperties": {},
      "properties": {
        "accessToken": {
          "kind": "property",
          "displayName": "Access Token",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The access token"
        },
        "accessTokenSecret": {
          "kind": "property",
          "displayName": "Access Token Secret",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The access token secret"
        },
        "consumerKey": {
          "kind": "property",
          "displayName": "Consumer Key",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-id"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The consumer key"
        },
        "consumerSecret": {
          "kind": "property",
          "displayName": "Consumer Secret",
          "group": "security",
          "label": "security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-secret"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "The consumer secret"
        }
      },
      "actions": [
        {
          "name": "Mention",
          "description": "Search for tweets that mention you",
          "id": "io.syndesis:twitter-mention-connector:latest",
          "camelConnectorGAV": "io.syndesis:twitter-mention-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "twitter-mention-connector",
          "definition": {
            "inputDataShape": {
               "kind": "none"
            },
            "outputDataShape": {
               "kind": "java",
               "type": "twitter4j.Status"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Search",
          "description": "Search tweets based one or more keywords",
          "id": "io.syndesis:twitter-search-connector:latest",
          "camelConnectorGAV": "io.syndesis:twitter-search-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "twitter-search",
          "definition": {
            "inputDataShape": {
               "kind" : "none"
            },
            "outputDataShape": {
               "kind" : "java",
               "type" : "twitter4j.Status"
            },
            "propertyDefinitionSteps": [{
              "name": "Search criteria",
              "description": "Specify criteria for search",
              "properties": {
                "filterOld": {
                  "kind": "parameter",
                  "displayName": "Ignore tweets previously found",
                  "group": "filter",
                  "label": "consumer,filter",
                  "type": "boolean",
                  "javaType": "boolean",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "defaultValue": true,
                  "componentProperty": false,
                  "description": "Filter out old tweets that have previously been polled"
                },
                "keywords": {
                  "kind": "path",
                  "displayName": "Keywords",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "Multiple search values can be separated with comma"
                },
                "delay": {
                  "kind": "parameter",
                  "displayName": "Delay",
                  "group": "scheduler",
                  "label": "consumer,scheduler",
                  "type": "integer",
                  "javaType": "long",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "defaultValue": 5000,
                  "componentProperty": false,
                  "description": "Milliseconds before the next poll"
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "salesforce",
      "name": "Salesforce",
      "description": "Cloud-based Customer Relationship Management",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {
        "loginUrl": {
          "kind": "property",
          "displayName": "Login Url",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "https://login.salesforce.com",
          "description": "URL of the Salesforce instance used for authentication by default set to https://login.salesforce.com"
        },
        "clientId": {
          "kind": "property",
          "displayName": "Client Id",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-id"],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "OAuth Consumer Key of the connected app configured in the Salesforce instance setup. Typically a connected app needs to be configured but one can be provided by installing a package."
        },
        "clientSecret": {
          "kind": "property",
          "displayName": "Client Secret",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":["oauth-client-secret"],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "OAuth Consumer Secret of the connected app configured in the Salesforce instance setup."
        },
        "refreshToken": {
          "kind": "property",
          "displayName": "Refresh Token",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Refresh token already obtained in the refresh token OAuth flow. One needs to setup a web application and configure a callback URL to receive the refresh token or configure using the builtin callback at https://login.salesforce.com/services/oauth2/success or https://test.salesforce.com/services/oauth2/success and then retrive the refresh_token from the URL at the end of the flow. Note that in development organizations Salesforce allows hosting the callback web application at localhost."
        },
        "userName": {
          "kind": "property",
          "displayName": "User Name",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Username used in OAuth flow to gain access to access token. It's easy to get started with password OAuth flow but in general one should avoid it as it is deemed less secure than other flows."
        },
        "password": {
          "kind": "property",
          "displayName": "Password",
          "group": "security",
          "label": "common,security",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Password used in OAuth flow to gain access to access token. It's easy to get started with password OAuth flow but in general one should avoid it as it is deemed less secure than other flows. Make sure that you append security token to the end of the password if using one."
        }
      },
      "actions": [
        {
          "id": "io.syndesis:salesforce-create-sobject-connector:latest",
          "name": "Create Salesforce object",
          "description": "Create Salesforce Object",
          "camelConnectorGAV": "io.syndesis:salesforce-create-sobject-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-create-sobject",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "json-schema"
            },
            "outputDataShape": {
               "kind": "java",
               "type": "org.apache.camel.component.salesforce.api.dto.CreateSObjectResult"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-delete-sobject-connector:latest",
          "name": "Delete Salesforce object",
          "description": "Delete Salesforce Object",
          "camelConnectorGAV": "io.syndesis:salesforce-delete-sobject-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-delete-sobject",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.IdToDelete"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-delete-sobject-with-id-connector:latest",
          "name": "Delete Salesforce object by external ID",
          "description": "Delete Salesforce Object by external ID",
          "camelConnectorGAV": "io.syndesis:salesforce-delete-sobject-with-id-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-delete-sobject-with-id",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.ExternalIdToDelete"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            },{
              "name": "Unique field",
              "description": "Specify field to hold the identifying value",
              "properties": {
                "sObjectIdName": {
                  "kind": "parameter",
                  "displayName": "SObject Id Name",
                  "group": "common",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "SObject external ID field name"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-get-sobject-connector:latest",
          "name": "Fetch Salesforce object by ID",
          "description": "Fetch Salesforce object by its ID",
          "camelConnectorGAV": "io.syndesis:salesforce-get-sobject-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-get-sobject",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.ExternalIdToGet"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-get-sobject-with-id-connector:latest",
          "name": "Fetch Salesforce object by unique ID",
          "description": "Fetch Salesforce object by unique ID",
          "camelConnectorGAV": "io.syndesis:salesforce-get-sobject-with-id-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-get-sobject-with-id",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "java",
               "type": "io.syndesis.connector.salesforce.ExternalIdToGet"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            },{
              "name": "Unique field",
              "description": "Specify field to hold the identifying value",
              "properties": {
                "sObjectIdName": {
                  "kind": "parameter",
                  "displayName": "SObject Id Name",
                  "group": "common",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "SObject external ID field name"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-update-sobject-connector:latest",
          "name": "Update Salesforce object",
          "description": "Update Salesforce Object",
          "camelConnectorGAV": "io.syndesis:salesforce-update-sobject-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-update-sobject",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "json-schema"
            },
            "outputDataShape": {
               "kind": "none"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            }]
          }
        },{
          "id": "io.syndesis:salesforce-upsert-sobject-connector:latest",
          "name": "Create/Update Salesforce object",
          "description": "Create or Update a Salesforce Object",
          "camelConnectorGAV": "io.syndesis:salesforce-upsert-sobject-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "salesforce-upsert-sobject",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind": "json-schema"
            },
            "outputDataShape": {
               "kind": "java",
               "type": "org.apache.camel.component.salesforce.api.dto.CreateSObjectResult"
            },
            "propertyDefinitionSteps": [{
              "name": "Object name",
              "description": "Specify the Salesforce object name",
              "properties": {
                "sObjectName": {
                  "kind": "parameter",
                  "displayName": "Object name",
                  "group": "common",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "Contact",
                  "description": "Name of the Salesforce object"
                }
              }
            },{
              "name": "Unique field",
              "description": "Specify field to hold the identifying value",
              "properties": {
                "sObjectIdName": {
                  "kind": "parameter",
                  "displayName": "SObject Id Name",
                  "group": "common",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "SObject external ID field name"
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "timer",
      "name": "Timer",
      "description": "Timer Connector",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis_timer-connector:latest",
          "name": "Periodic Timer",
          "description": "Set a timer that fires at intervals that you specify",
          "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "periodic-timer-connector",
          "definition": {
            "inputDataShape": {
               "kind" : "none"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": [{
              "name": "Timer parameters",
              "description": "Specify the period for the timer",
              "properties": {
                "period": {
                  "kind": "parameter",
                  "displayName": "Period",
                  "group": "consumer",
                  "required": false,
                  "type": "integer",
                  "javaType": "long",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": 10000,
                  "description": "Period in milli seconds when the timer runs. By default the timer runs every 10000 (10 second)."
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "trade-insight",
      "name": "Trade Insight",
      "description": "Trade Insight API connector",
      "icon": "fa-usd",
      "configuredProperties": {},
      "properties": {
        "host": {
          "kind": "property",
          "displayName": "Host",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Host and port of HTTP service to use (override host in swagger schema)"
        }
      },
      "actions": [
        {
          "name": "Buy Recommendation",
          "description": "Fetches buy recommendation from Trade Insight API server",
          "id": "io.syndesis:trade-insight-buy-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-buy-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-buy",
          "definition": {
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.tradeinsight.Suggestion"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Sell Recommendation",
          "description": "Fetches sell recommendation from Trade Insight API server",
          "id": "io.syndesis:trade-insight-sell-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-sell-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-sell",
          "definition": {
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.tradeinsight.Suggestion"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Top Recommendation",
          "description": "Fetches top recommendation from Trade Insight API server",
          "id": "io.syndesis:trade-insight-top-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-top-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-top",
          "definition": {
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.tradeinsight.Suggestion"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "sql-stored",
      "name": "SQL Stored Procedure",
      "description": "Relational Database SQL Stored procedure invocation",
      "icon": "fa-database",
      "configuredProperties": {},
      "properties": {
        "url": {
          "kind": "property",
          "displayName": "Connection URL",
          "group": "producer",
          "label": "common",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "jdbc:postgresql:database",
          "description": "JDBC URL of the database"
        },
        "user": {
          "kind": "property",
          "displayName": "Username",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "",
          "description": "Username for the database connection"
        },
        "password": {
          "kind": "property",
          "displayName": "Password",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Password for the database connection"
        },
        "schema": {
          "kind": "property",
          "displayName": "Schema",
          "group": "producer",
          "label": "common",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Database schema"
        },
        "catalog": {
          "kind": "property",
          "displayName": "Catalog",
          "group": "producer",
          "label": "common",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Database catalog"
        }
      },
      "actions": [
        {
          "id": "io.syndesis:sql-stored-connector:latest",
          "name": "Invoke SQL stored procedure",
          "description": "Invoke SQL stored procedure to get data in and/or out",
          "camelConnectorGAV": "io.syndesis:sql-stored-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "sql-stored-connector",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind" : "json-schema"
            },
            "outputDataShape": {
               "kind" : "json-schema"
            },
            "propertyDefinitionSteps": [{
              "name": "Procedure Name",
              "description": "Select the Stored Procedure",
              "properties": {
                "procedureName": {
                  "kind": "path",
                  "displayName": "Procedure Name",
                  "group": "producer",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "Name of the Store Procedure"
                }
              }
            },{
              "name": "SQL stored procedure parameters",
              "description": "Specify SQL stored procedure parameters",
              "properties": {
                "template": {
                  "kind": "path",
                  "displayName": "Template",
                  "group": "producer",
                  "required": false,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "StoredProcedure template to perform"
                },
                "batch": {
                  "kind": "parameter",
                  "displayName": "Batch",
                  "group": "producer",
                  "required": false,
                  "type": "boolean",
                  "javaType": "boolean",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "false",
                  "description": "Enables or disables batch mode"
                },
                "noop": {
                  "kind": "parameter",
                  "displayName": "Noop",
                  "group": "producer",
                  "required": false,
                  "type": "boolean",
                  "javaType": "boolean",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "false",
                  "description": "If set will ignore the results of the template and use the existing IN message as the OUT message for the continuation of processing"
                }
              }
            }]
          }
        }
      ]
    }
  }
]
