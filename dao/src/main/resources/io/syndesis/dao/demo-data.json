[
  {
    "kind": "connection",
    "data": {
      "id": "1",
      "name": "Twitter Example",
      "description": "Twitter Connection",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "icon": "fa-twitter",
      "connectorId": "twitter",
      "configuredProperties": {
        "accessToken": "twitter-access-token",
        "accessTokenSecret": "twitter-access-token-secret",
        "consumerKey": "twitter-consumer-key",
        "consumerSecret": "twitter-consumer-secret"
      }
    }
  },
  {
    "kind": "connection",
    "data": {
      "id": "2",
      "name": "Salesforce Example",
      "description": "Salesforce Connection",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"],
      "icon": "fa-globe",
      "connectorId": "salesforce",
      "configuredProperties": {
        "loginUrl": "https://login.salesforce.com",
        "clientId": "salesforce-client-id",
        "clientSecret": "salesforce-client-secret",
        "refreshToken": "salesforce-refresh-token"
      }
    }
  },
  {
    "kind": "connection",
    "data": {
      "id": "3",
      "name": "HTTP Example",
      "description": "HTTP Connection",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"],
      "icon": "fa-globe",
      "connectorId": "http",
      "configuredProperties": {}
    }
  },
  {
    "kind": "connection",
    "data": {
      "id": "4",
      "name": "Timer Example",
      "description": "Timer Connection",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"],
      "icon": "fa-globe",
      "connectorId": "timer",
      "configuredProperties": {}
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "1",
      "name": "Twitter to Salesforce Example",
      "description": "This is an example of a Twitter to Salesforce integration",
      "configuration": "",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "tags":["example","test"],
      "currentStatus": "Activated",
      "desiredStatus": "Activated",
      "steps": [
        {
          "id": "1",
          "stepKind": "endpoint",
          "connection": {
            "id": "1",
            "name": "Twitter Example",
            "description": "Twitter Connection",
            "icon": "fa-twitter",
            "connectorId": "twitter",
            "configuredProperties": {
              "accessToken": "twitter-access-token",
              "accessTokenSecret": "twitter-access-token-secret",
              "consumerKey": "twitter-consumer-key",
              "consumerSecret": "twitter-consumer-secret"
            }
          },
          "action": {
            "id": "1",
            "connectorId": "io.syndesis:twitter-mention-connector:latest",
            "description": "Connection from twitter when anyone mention you",
            "name": "Twitter Mention",
            "camelConnectorGAV": "io.syndesis:twitter-mention-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "twitter-mention",
            "definition": {
              "inputDataShape": {
                  "kind" : "none"
              },
              "outputDataShape": {
                  "kind" : "java",
                  "type" : "twitter4j.Status"
              }
            }
          },
          "configuredProperties": {
          }
        },{
          "id": "2",
          "stepKind": "filter",
          "configuredProperties": {
            "filter": "${body.text} contains \"#RHSummit\""
            }
        },{
          "id": "3",
          "stepKind": "mapper",
          "configuredProperties": {
            "atlasmapping": "{ \"AtlasMapping\": { \"jsonType\": \"com.mediadriver.atlas.v2.AtlasMapping\", \"properties\": { \"property\": [] }, \"fieldMappings\": { \"fieldMapping\": [ { \"jsonType\": \"com.mediadriver.atlas.v2.SeparateFieldMapping\", \"inputField\": { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"Name\", \"path\": \"User.name\", \"type\": \"STRING\", \"getMethod\": \"getName\" }, \"fieldActions\": { \"fieldAction\": [] } }, \"outputFields\": { \"mappedField\": [ { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"FirstName\", \"path\": \"FirstName\", \"type\": \"STRING\", \"setMethod\": \"setFirstName\" }, \"fieldActions\": { \"fieldAction\": [ { \"jsonType\": \"com.mediadriver.atlas.v2.MapAction\", \"index\": 0 } ] } }, { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"LastName\", \"path\": \"LastName\", \"type\": \"STRING\", \"setMethod\": \"setLastName\" }, \"fieldActions\": { \"fieldAction\": [ { \"jsonType\": \"com.mediadriver.atlas.v2.MapAction\", \"index\": 1 } ] } } ] } }, { \"jsonType\": \"com.mediadriver.atlas.v2.MapFieldMapping\", \"inputField\": { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"Text\", \"path\": \"Text\", \"type\": \"STRING\", \"getMethod\": \"getText\" }, \"fieldActions\": { \"fieldAction\": [] } }, \"outputField\": { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"Description\", \"path\": \"description\", \"type\": \"STRING\", \"setMethod\": \"setDescription\" }, \"fieldActions\": { \"fieldAction\": [] } } }, { \"jsonType\": \"com.mediadriver.atlas.v2.MapFieldMapping\", \"inputField\": { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"ScreenName\", \"path\": \"User.screenName\", \"type\": \"STRING\", \"getMethod\": \"getScreenName\" }, \"fieldActions\": { \"fieldAction\": [] } }, \"outputField\": { \"jsonType\": \"com.mediadriver.atlas.v2.MappedField\", \"field\": { \"jsonType\": \"com.mediadriver.atlas.java.v2.JavaField\", \"name\": \"Title\", \"path\": \"Title\", \"type\": \"STRING\", \"setMethod\": \"setTitle\" }, \"fieldActions\": { \"fieldAction\": [] } } } ] }, \"name\": \"twitterStatusToSalesforceContact\", \"sourceUri\": \"atlas:java?className=twitter4j.Status\", \"targetUri\": \"atlas:java?className=io.syndesis.connector.salesforce.Contact\" } } "
           }
        },{
          "id": "4",
          "stepKind": "endpoint",
          "connection": {
            "id": "2",
            "connectorId": "salesforce",
            "description": "Salesforce Connection",
            "icon": "fa-puzzle-piece",
            "name": "Salesforce Example",
            "configuredProperties": {
              "loginUrl": "https://login.salesforce.com",
              "clientId": "salesforce-client-id",
              "clientSecret": "salesforce-client-secret",
              "refreshToken": "salesforce-refresh-token"
            }
          },
          "action": {
            "id": "2",
            "name": "Salesforce Upsert Contact",
            "description": "Connection to Create or Update Salesforce Contact SObject",
            "camelConnectorGAV": "io.syndesis:salesforce-upsert-contact-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "salesforce-upsert-contact",
            "connectorId": "io.syndesis:salesforce-upsert-contact-connector:latest",
            "definition": {
              "inputDataShape": {
                 "kind" : "java",
                 "type" : "io.syndesis.connector.salesforce.Contact"
              },
              "outputDataShape": {
                 "kind" : "none"
              }
            }
          },
          "configuredProperties": {
          }
        }
      ]
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "2",
      "name": "Timed Pull to Post Example",
      "description": "This is an example of a Timed Pull to Post Integration",
      "configuration": "",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "desiredStatus": "Activated",
      "currentStatus": "Activated",
      "statusMessage": "This integration failed. Please contact system admin for errors.",
      "tags":["example","test"],
      "steps": [
        {
          "id": "5",
          "stepKind": "endpoint",
          "connection": {
            "id": "4",
            "name": "Timer Example",
            "description": "Timer Connection",
            "icon": "fa-globe",
            "connectorId": "timer",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis_timer-connector:latest",
            "name": "PeriodicTimer",
            "description": "Set a timer that fires at intervals that you specify",
            "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "periodic-timer",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "period": "500"
          }
        },{
          "id": "6",
          "stepKind": "log",
          "configuredProperties": {
            "message": "Hello World! ${body}",
            "loggingLevel": "INFO"
          }
        },
        {
          "id": "7",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-post-connector:latest",
            "name": "HTTP POST",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-post",
            "definition": {
              "inputDataShape": {
                 "kind" : "any"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/bye"
          }
        },{
          "id": "8",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-get-connector:latest",
            "name": "HTTP GET",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-get",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/hello"
          }
        }
      ]
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "3",
      "name": "Breakaway Example",
      "description": "This is an example in Active state",
      "configuration": "",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "desiredStatus": "Activated",
      "currentStatus": "Activated",
      "tags":["example","test"],
      "steps": [
        {
          "id": "5",
          "stepKind": "endpoint",
          "connection": {
            "id": "4",
            "name": "Timer Example",
            "description": "Timer Connection",
            "icon": "fa-globe",
            "connectorId": "timer",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis_timer-connector:latest",
            "name": "PeriodicTimer",
            "description": "Set a timer that fires at intervals that you specify",
            "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "periodic-timer",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "period": "500"
          }
        },{
          "id": "6",
          "stepKind": "log",
          "configuredProperties": {
            "message": "Hello World! ${body}",
            "loggingLevel": "INFO"
          }
        },
        {
          "id": "7",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-post-connector:latest",
            "name": "HTTP POST",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-post",
            "definition": {
              "inputDataShape": {
                 "kind" : "any"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/bye"
          }
        },{
          "id": "8",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-get-connector:latest",
            "name": "HTTP GET",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-get",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/hello"
          }
        }
      ]
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "4",
      "name": "Facebook Message to Twitter",
      "description": "This is an example in Deactivated state",
      "configuration": "",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "desiredStatus": "Deactivated",
      "currentStatus": "Deactivated",
      "tags":["example","test"],
      "steps": [
        {
          "id": "5",
          "stepKind": "endpoint",
          "connection": {
            "id": "4",
            "name": "Timer Example",
            "description": "Timer Connection",
            "icon": "fa-globe",
            "connectorId": "timer",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis_timer-connector:latest",
            "name": "PeriodicTimer",
            "description": "Set a timer that fires at intervals that you specify",
            "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "periodic-timer",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "period": "500"
          }
        },{
          "id": "6",
          "stepKind": "log",
          "configuredProperties": {
            "message": "Hello World! ${body}",
            "loggingLevel": "INFO"
          }
        },
        {
          "id": "7",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-post-connector:latest",
            "name": "HTTP POST",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-post",
            "definition": {
              "inputDataShape": {
                 "kind" : "any"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/bye"
          }
        },{
          "id": "8",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-get-connector:latest",
            "name": "HTTP GET",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-get",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/hello"
          }
        }
      ]
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "5",
      "name": "Facebook Photo to Twitter",
      "description": "This is an example in Pending state",
      "configuration": "",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "desiredStatus": "Activated",
      "currentStatus": "Pending",
      "tags":["example","test"],
      "steps": [
        {
          "id": "5",
          "stepKind": "endpoint",
          "connection": {
            "id": "4",
            "name": "Timer Example",
            "description": "Timer Connection",
            "icon": "fa-globe",
            "connectorId": "timer",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis_timer-connector:latest",
            "name": "PeriodicTimer",
            "description": "Set a timer that fires at intervals that you specify",
            "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "periodic-timer",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "period": "500"
          }
        },{
          "id": "6",
          "stepKind": "log",
          "configuredProperties": {
            "message": "Hello World! ${body}",
            "loggingLevel": "INFO"
          }
        },
        {
          "id": "7",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-post-connector:latest",
            "name": "HTTP POST",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-post",
            "definition": {
              "inputDataShape": {
                 "kind" : "any"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/bye"
          }
        },{
          "id": "8",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-get-connector:latest",
            "name": "HTTP GET",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-get",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/hello"
          }
        }
      ]
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "6",
      "name": "Update Client Service Example",
      "description": "This is an example in Draft state",
      "configuration": "",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "desiredStatus": "Draft",
      "currentStatus": "Draft",
      "tags":["example","test"],
      "steps": [
        {
          "id": "5",
          "stepKind": "endpoint",
          "connection": {
            "id": "4",
            "name": "Timer Example",
            "description": "Timer Connection",
            "icon": "fa-globe",
            "connectorId": "timer",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis_timer-connector:latest",
            "name": "PeriodicTimer",
            "description": "Set a timer that fires at intervals that you specify",
            "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "periodic-timer",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "period": "500"
          }
        },{
          "id": "6",
          "stepKind": "log",
          "configuredProperties": {
            "message": "Hello World! ${body}",
            "loggingLevel": "INFO"
          }
        },
        {
          "id": "7",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-post-connector:latest",
            "name": "HTTP POST",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-post",
            "definition": {
              "inputDataShape": {
                 "kind" : "any"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/bye"
          }
        },{
          "id": "8",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-get-connector:latest",
            "name": "HTTP GET",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-get",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/hello"
          }
        }
      ]
    }
  },
  {
    "kind": "integration",
    "data": {
      "id": "7",
      "name": "Deleted Client Service Example",
      "description": "This is an example in Deleted state",
      "configuration": "",
      "createdDate": 1492095344060,
      "lastUpdated": 1492095344060,
      "desiredStatus": "Deleted",
      "currentStatus": "Deleted",
      "tags":["example","test"],
      "steps": [
        {
          "id": "5",
          "stepKind": "endpoint",
          "connection": {
            "id": "4",
            "name": "Timer Example",
            "description": "Timer Connection",
            "icon": "fa-globe",
            "connectorId": "timer",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis_timer-connector:latest",
            "name": "PeriodicTimer",
            "description": "Set a timer that fires at intervals that you specify",
            "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "periodic-timer",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "period": "500"
          }
        },{
          "id": "6",
          "stepKind": "log",
          "configuredProperties": {
            "message": "Hello World! ${body}",
            "loggingLevel": "INFO"
          }
        },
        {
          "id": "7",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-post-connector:latest",
            "name": "HTTP POST",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-post",
            "definition": {
              "inputDataShape": {
                 "kind" : "any"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/bye"
          }
        },{
          "id": "8",
          "stepKind": "endpoint",
          "connection": {
            "id": "3",
            "name": "HTTP Example",
            "description": "HTTP Connection",
            "icon": "fa-globe",
            "connectorId": "http",
            "configuredProperties": {}
          },
          "action": {
            "id": "io.syndesis:http-get-connector:latest",
            "name": "HTTP GET",
            "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
            "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
            "camelConnectorPrefix": "http-get",
            "definition": {
              "inputDataShape": {
                 "kind" : "none"
              },
              "outputDataShape": {
                 "kind" : "any"
              }
            }
          },
          "configuredProperties": {
            "httpUri": "http://localhost:8080/hello"
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "linkedin",
      "name": "LinkedIn",
      "description": "Connect and interact with your professional social network",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:linkedin-get-connections-connector:latest",
          "name": "Get Connections",
          "description": "Get all LinkedIn connections",
          "camelConnectorGAV": "io.syndesis:linkedin-connections-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "linkedin-connections",
          "definition": {
            "inputDataShape": {
               "kind" : "none"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:linkedin-add-invite-connector:latest",
          "name": "Send Invite",
          "description": "Send out a LinkedIn Invite",
          "camelConnectorGAV": "io.syndesis:linkedin-invite-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "linkedin-invite",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "none"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "servicenow",
      "name": "ServiceNow",
      "description": "Cloud-based IT Service Management",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:servicenow-connector:latest",
          "name": "service-now",
          "description": "Provides access to all of ServiceNow REST API",
          "camelConnectorGAV": "io.syndesis:servicenow-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "servicenow",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "github",
      "name": "GitHub",
      "description": "Manage code on GitHub through commits, pull requests, tags, and more",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:github-pullrequest-connector:latest",
          "name": "github-pullrequest",
          "description": "Create a GitHub PullRequest",
          "camelConnectorGAV": "io.syndesis:github-pullrequest-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "github-pullrequest",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            }
          }
        },
        {
          "id": "io.syndesis:github-tag-connector:latest",
          "name": "github-tag",
          "description": "Create a GitHub Tag",
          "camelConnectorGAV": "io.syndesis:github-tag-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "github-tag",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            }
          }
        },
        {
          "id": "io.syndesis:github-commit-connector:latest",
          "name": "github-commit",
          "description": "Performs a GitHub Commit",
          "camelConnectorGAV": "io.syndesis:github-commit-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "github-commit",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "gmail",
      "name": "GMail",
      "description": "Send and receive email using Google's Gmail service",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:gmail-send:latest",
          "name": "GMail Send",
          "description": "Send an email",
          "camelConnectorGAV": "io.syndesis:gmail-send-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-send",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:gmail-list:latest",
          "name": "GMail List",
          "description": "List incoming messages",
          "camelConnectorGAV": "io.syndesis:gmail-list-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-list",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:gmail-get:latest",
          "name": "GMail Get",
          "description": "Get email message",
          "camelConnectorGAV": "io.syndesis:gmail-get-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-get",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:gmail-delete:latest",
          "name": "GMail Delete",
          "description": "Delete email message",
          "camelConnectorGAV": "io.syndesis:gmail-delete-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "gmail-delete",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "facebook",
      "name": "Facebook",
      "description": "Access Facebook social network features such as posts, users, checkins, etc",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:facebook-post-connector:latest",
          "name": "Post",
          "description": "Creates a post to Facebook",
          "camelConnectorGAV": "io.syndesis:facebook-post-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "facebook-post",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "id": "io.syndesis:facebook-like-connector:latest",
          "name": "Like",
          "description": "Like something on Facebook",
          "camelConnectorGAV": "io.syndesis:facebook-like-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "facebook-like",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "jms",
      "name": "Messaging",
      "description": "Produce and consume messages for event-driven interaction",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:jms-producer-connector:latest",
          "name": "Message Producer",
          "description": "Drop a message on a Queue",
          "camelConnectorGAV": "io.syndesis:jms-producer-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "jms-producer",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            }
          }
        },
        {
          "id": "io.syndesis:jms-consumer-connector:latest",
          "name": "Message Consumer",
          "description": "Takes a message off a Queue",
          "camelConnectorGAV": "io.syndesis:jms-consumer-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "jms-consumer",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "ftp",
      "name": "File Transfer",
      "description": "Remote, secure file transfer",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:ftp-connector:latest",
          "name": "File Transport",
          "description": "FTP/SFTP/FPTS file transfer",
          "camelConnectorGAV": "io.syndesis:ftp-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "ftp",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "day-trade",
      "name": "Day Trade",
      "description": "Day Trade API connector",
      "icon": "fa-usd",
      "configuredProperties": {},
      "properties": {
        "host": {
          "kind": "property",
          "displayName": "Host",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": false,
          "description": "Host and port of HTTP service to use (override host in swagger schema)"
        },
        "api_key": {
          "kind": "property",
          "displayName": "API Key",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": false,
          "description": "The API Key used to access the service"
        }
      },
      "actions": [
        {
          "name": "Place Trade",
          "description": "Place trade on Day Trade API server",
          "id": "io.syndesis:day-trade-place-connector:latest",
          "camelConnectorGAV": "io.syndesis:day-trade-place-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "day-trade-place",
          "definition": {
            "inputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.daytrade.Trade"
            },
            "outputDataShape": {
              "kind": "none"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Retrieve Trade",
          "description": "Retrieve a trade on Day Trade API server",
          "id": "io.syndesis:day-trade-place-connector:latest",
          "camelConnectorGAV": "io.syndesis:day-trade-place-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "day-trade-place",
          "definition": {
            "inputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.daytrade.Trade"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.daytrade.Trade"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Get Latest Trade",
          "description": "Get the latest trade on Day Trade API server",
          "id": "io.syndesis:day-trade-place-connector:latest",
          "camelConnectorGAV": "io.syndesis:day-trade-place-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "day-trade-place",
          "definition": {
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.daytrade.Trade"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "http",
      "name": "HTTP",
      "description": "Interact with APIs and plain HTTP endpoints",
      "icon": "fa-globe",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis:http-get-connector:latest",
          "name": "HTTP GET",
          "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
          "camelConnectorGAV": "io.syndesis:http-get-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "http-get-connector",
          "definition": {
            "inputDataShape": {
               "kind" : "none"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": [{
              "name": "HTTP Endpoint",
              "description": "Specify HTTP address to fetch the data from",
              "properties": {
                "httpUri": {
                  "kind": "path",
                  "displayName": "Http Uri",
                  "group": "producer",
                  "label": "producer",
                  "required": true,
                  "type": "string",
                  "javaType": "java.net.URI",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "The url of the HTTP endpoint to call."
                }
              }
            }]
          }
        },
        {
          "id": "io.syndesis:http-post-connector:latest",
          "name": "HTTP POST",
          "description": "Call a service that is internal (within your company) or external (on the internet) by specifying the service's URL",
          "camelConnectorGAV": "io.syndesis:http-post-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "http-post-connector",
          "definition": {
            "inputDataShape": {
               "kind" : "any"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": [{
              "name": "HTTP Endpoint",
              "description": "Specify HTTP address to send the data to",
              "properties": {
                "httpUri": {
                  "kind": "path",
                  "displayName": "Http Uri",
                  "group": "producer",
                  "label": "producer",
                  "required": true,
                  "type": "string",
                  "javaType": "java.net.URI",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "The url of the HTTP endpoint to call."
                }
              }
            }]
          }
        }
      ]
    }
  },
  
  {
    "kind": "connector",
    "data": {
      "id": "timer",
      "name": "Timer",
      "description": "Timer Connector",
      "icon": "fa-puzzle-piece",
      "configuredProperties": {},
      "properties": {},
      "actions": [
        {
          "id": "io.syndesis_timer-connector:latest",
          "name": "Periodic Timer",
          "description": "Set a timer that fires at intervals that you specify",
          "camelConnectorGAV": "io.syndesis:timer-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "periodic-timer-connector",
          "definition": {
            "inputDataShape": {
               "kind" : "none"
            },
            "outputDataShape": {
               "kind" : "any"
            },
            "propertyDefinitionSteps": [{
              "name": "Timer parameters",
              "description": "Specify the period for the timer",
              "properties": {
                "period": {
                  "kind": "parameter",
                  "displayName": "Period",
                  "group": "consumer",
                  "required": false,
                  "type": "integer",
                  "javaType": "long",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": 10000,
                  "description": "Period in milli seconds when the timer runs. By default the timer runs every 10000 (10 second)."
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "trade-insight",
      "name": "Trade Insight",
      "description": "Trade Insight API connector",
      "icon": "fa-usd",
      "configuredProperties": {},
      "properties": {
        "host": {
          "kind": "property",
          "displayName": "Host",
          "group": "producer",
          "label": "producer",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Host and port of HTTP service to use (override host in swagger schema)"
        }
      },
      "actions": [
        {
          "name": "Buy Recommendation",
          "description": "Fetches buy recommendation from Trade Insight API server",
          "id": "io.syndesis:trade-insight-buy-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-buy-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-buy",
          "definition": {
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.tradeinsight.Suggestion"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Sell Recommendation",
          "description": "Fetches sell recommendation from Trade Insight API server",
          "id": "io.syndesis:trade-insight-sell-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-sell-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-sell",
          "definition": {
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.tradeinsight.Suggestion"
            },
            "propertyDefinitionSteps": []
          }
        },
        {
          "name": "Top Recommendation",
          "description": "Fetches top recommendation from Trade Insight API server",
          "id": "io.syndesis:trade-insight-top-connector:latest",
          "camelConnectorGAV": "io.syndesis:trade-insight-top-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "trade-insight-top",
          "definition": {
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "java",
              "type": "io.syndesis.connector.tradeinsight.Suggestion"
            },
            "propertyDefinitionSteps": []
          }
        }
      ]
    }
  },
  {
    "kind": "connector",
    "data": {
      "id": "sql-stored-connector",
      "name": "SQL Stored Procedure",
      "description": "Relational Database SQL Stored procedure invocation",
      "icon": "fa-database",
      "configuredProperties": {},
      "properties": {
        "url": {
          "kind": "property",
          "displayName": "Connection URL",
          "group": "producer",
          "label": "common",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "jdbc:postgresql://syndesis-db:5432/sampledb",
          "description": "JDBC URL of the database"
        },
        "user": {
          "kind": "property",
          "displayName": "Username",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "sampledb",
          "description": "Username for the database connection"
        },
        "password": {
          "kind": "property",
          "displayName": "Password",
          "group": "security",
          "label": "common,security",
          "required": true,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": true,
          "componentProperty": true,
          "description": "Password for the database connection"
        },
        "schema": {
          "kind": "property",
          "displayName": "Schema",
          "group": "producer",
          "label": "common",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "defaultValue": "sampledb",
          "description": "Database schema"
        },
        "catalog": {
          "kind": "property",
          "displayName": "Catalog",
          "group": "producer",
          "label": "common",
          "required": false,
          "type": "string",
          "javaType": "java.lang.String",
          "tags":[],
          "deprecated": false,
          "secret": false,
          "componentProperty": true,
          "description": "Database catalog"
        }
      },
      "actions": [
        {
          "id": "io.syndesis:sql-stored-connector:latest",
          "name": "Invoke SQL stored procedure",
          "description": "Invoke SQL stored procedure to get data in and/or out",
          "camelConnectorGAV": "io.syndesis:sql-stored-connector:@syndesis-connectors.version@",
          "camelConnectorPrefix": "sql-stored-connector",
          "tags": [ "dynamic" ],
          "definition": {
            "inputDataShape": {
               "kind" : "json-schema"
            },
            "outputDataShape": {
               "kind" : "json-schema"
            },
            "propertyDefinitionSteps": [{
              "name": "Procedure Name",
              "description": "Select the Stored Procedure",
              "properties": {
                "procedureName": {
                  "kind": "path",
                  "displayName": "Procedure Name",
                  "group": "producer",
                  "required": true,
                  "type": "string",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "description": "Name of the Store Procedure"
                }
              }
            },{
              "name": "SQL stored procedure parameters",
              "description": "Specify SQL stored procedure parameters",
              "properties": {
                "template": {
                  "kind": "path",
                  "displayName": "Template",
                  "group": "producer",
                  "required": true,
                  "type": "hidden",
                  "javaType": "java.lang.String",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "",
                  "description": "StoredProcedure template to perform"
                },
                "batch": {
                  "kind": "parameter",
                  "displayName": "Batch",
                  "group": "producer",
                  "required": false,
                  "type": "boolean",
                  "javaType": "boolean",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "false",
                  "description": "Enables or disables batch mode"
                },
                "noop": {
                  "kind": "parameter",
                  "displayName": "Noop",
                  "group": "producer",
                  "required": false,
                  "type": "boolean",
                  "javaType": "boolean",
                  "tags":[],
                  "deprecated": false,
                  "secret": false,
                  "componentProperty": false,
                  "defaultValue": "false",
                  "description": "If set will ignore the results of the template and use the existing IN message as the OUT message for the continuation of processing"
                }
              }
            }]
          }
        }
      ]
    }
  },
  {
    "kind": "connection",
    "data": {
      "id": "5",
      "name": "PostgresDB",
      "description": "Sample Database Connection for Stored Procedure Invocation",
      "tags":["sampledb"],
      "icon": "fa-database",
      "connectorId": "sql-stored-connector",
      "configuredProperties": {
        "url": "jdbc:postgresql://syndesis-db:5432/sampledb",
        "user": "sampledb",
        "password": "@POSTGRESQL_SAMPLEDB_PASSWORD@",
        "schema": "sampledb"
      }
    }
  }
]
